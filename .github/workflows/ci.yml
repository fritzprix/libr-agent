name: 🚀 SynapticFlow CI/CD

on:
  push:
    branches: [main, master, ref/chat]
  pull_request:
    branches: [main, master, ref/chat]

jobs:
  test:
    name: 🧪 Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🦀 Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: 🦀 Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: 📦 Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: 📦 Install dependencies
        run: pnpm install

      - name: � Lint check
        run: pnpm lint

      - name: �🔧 Install Tauri dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libglib2.0-dev \
            pkg-config \
            libgtk-3-dev

      - name: Set PKG_CONFIG_PATH (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig" >> $GITHUB_ENV

      - name: 🧪 Run tests (if available)
        run: pnpm test || echo "No tests defined"

      - name: 🔍 Check TypeScript
        run: pnpm tsc --noEmit

      - name: 🦀 Check Rust
        run: cd src-tauri && cargo check

      # Code Quality Checks (PR only)
      - name: 🔍 Rust Clippy (PR)
        if: github.event_name == 'pull_request'
        run: cd src-tauri && cargo clippy -- -D warnings

      - name: 🎨 Rust Format Check (PR)
        if: github.event_name == 'pull_request'
        run: cd src-tauri && cargo fmt --check

      # Security Checks (PR only)
      - name: 🔒 npm audit (PR)
        if: github.event_name == 'pull_request'
        run: pnpm audit --audit-level high
        continue-on-error: true

      - name: 🔒 Cargo audit (PR)
        if: github.event_name == 'pull_request'
        run: |
          cargo install cargo-audit
          cd src-tauri && cargo audit
        continue-on-error: true

  build:
    name: 🔨 Build
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🦀 Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: 📦 Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: 📦 Install dependencies
        run: pnpm install

      - name: 🔧 Install Tauri dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libglib2.0-dev \
            pkg-config \
            libgtk-3-dev

      - name: Set PKG_CONFIG_PATH (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig" >> $GITHUB_ENV

      - name: 🏗️ Build Tauri app
        run: pnpm tauri build

      - name: 📦 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: synapticflow-build-${{ matrix.os }}
          path: |
            src-tauri/target/release/bundle/
          retention-days: 7
