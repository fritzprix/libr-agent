name: 🚀 TauriAgent CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ published ]

jobs:
  test:
    name: 🧪 Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4
    
    - name: 🦀 Setup Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: 📦 Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9
    
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
    
    - name: 📦 Install dependencies
      run: pnpm install
    
    - name: 🧪 Run tests (if available)
      run: pnpm test || echo "No tests defined"
    
    - name: 🔍 Check TypeScript
      run: pnpm tsc --noEmit
    
    - name: 🦀 Check Rust
      run: cd src-tauri && cargo check

  build:
    name: 🔨 Build
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4
    
    - name: 🦀 Setup Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: 📦 Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9
    
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
    
    - name: 📦 Install dependencies
      run: pnpm install
    
    - name: 🔧 Install Tauri dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
    
    - name: 🏗️ Build Tauri app
      run: pnpm tauri build
    
    - name: 📤 Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: tauri-agent-${{ matrix.os }}
        path: src-tauri/target/release/bundle/

  release:
    name: 🎉 Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4
    
    - name: 📥 Download artifacts
      uses: actions/download-artifact@v4
    
    - name: 🎉 Upload release assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          tauri-agent-*/
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
